#! /usr/bin/env python3

import argparse
import logging

import laser.device
from laser.client import LaserSerialClient, LaserTcpClient, LaserUdpClient

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Laser Control Protocol command-line option")

    parser.add_argument("--method", type=str, choices=["SERIAL", "TCP", "UDP"],
                                    required=True, help="factory method")
    parser.add_argument("--address", type=str, required=True,
                                     help="serial port or IP-address")
    parser_ex = parser.add_mutually_exclusive_group()
    parser_ex.add_argument("--port", type=int, default=10001,
                                     help="network port")
    parser_ex.add_argument("--baudrate", type=int, default=9600,
                                         help="serial port baudrate")
    parser.add_argument("--device", type=str, required=True,
                                    help="device name")
    parser.add_argument("--send", type=str, nargs="+", metavar=("CMD", "VALUE"),
                                  required=True, help="send CMD with value")
    parser.add_argument("--debug", action="store_true",
                                   help="print debug information")
    args = parser.parse_args()

    if args.debug:
        logging.basicConfig(level=logging.DEBUG)

    factory = {"SERIAL": LaserSerialClient,
               "TCP": LaserTcpClient,
               "UDP": LaserUdpClient,
              }[args.method]
    device = getattr(laser.device, args.device)

    client = factory(address=args.address, port=args.port,
                     baudrate=args.baudrate, device=device)
    if args.send:
        cmd = args.send[0]
        try:
            value = args.send[1]
        except IndexError:
            value = None

        print(client.send(cmd, value))
